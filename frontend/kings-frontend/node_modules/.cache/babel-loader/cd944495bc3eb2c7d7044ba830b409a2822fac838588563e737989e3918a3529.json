{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\THINKPAD\\\\Desktop\\\\UEL\\\\Enterprise_Architecture\\\\CourseWorkApp\\\\frontend\\\\kings-frontend\\\\src\\\\components\\\\EmailModal.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Modal, Button, Form } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EmailModal = ({\n  show,\n  handleClose,\n  recipientEmail\n}) => {\n  _s();\n  const [subject, setSubject] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [sending, setSending] = useState(false);\n  const [success, setSuccess] = useState(false);\n  const handleSend = async () => {\n    setSending(true);\n    try {\n      const response = await fetch(\"/api/email/send\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          to: recipientEmail,\n          subject,\n          message\n        })\n      });\n      const data = await response.json();\n      if (response.ok) {\n        setSuccess(true);\n        setTimeout(() => {\n          handleClose();\n          setSubject(\"\");\n          setMessage(\"\");\n          setSuccess(false);\n        }, 1500);\n      } else {\n        alert(data.message || \"Failed to send email\");\n      }\n    } catch (error) {\n      console.error(\"Email error:\", error);\n      alert(\"Error sending email\");\n    }\n    setSending(false);\n  };\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    show: show,\n    onHide: handleClose,\n    centered: true,\n    children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n      closeButton: true,\n      children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n        children: \"Send Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n      children: [/*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"emailTo\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"To\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"email\",\n            value: recipientEmail,\n            disabled: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"emailSubject\",\n          className: \"mt-3\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Subject\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            placeholder: \"Enter subject\",\n            value: subject,\n            onChange: e => setSubject(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"emailMessage\",\n          className: \"mt-3\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Message\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            as: \"textarea\",\n            rows: 5,\n            placeholder: \"Type your message here...\",\n            value: message,\n            onChange: e => setMessage(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), success && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-success mt-3\",\n        children: \"\\u2705 Email sent successfully!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: \"secondary\",\n        onClick: handleClose,\n        disabled: sending,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        onClick: handleSend,\n        disabled: !subject || !message || sending,\n        children: sending ? \"Sending...\" : \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_s(EmailModal, \"GY1EE0OzoaFHTq/38Mol1GRWB3w=\");\n_c = EmailModal;\nexport default EmailModal;\nvar _c;\n$RefreshReg$(_c, \"EmailModal\");","map":{"version":3,"names":["React","useState","Modal","Button","Form","jsxDEV","_jsxDEV","EmailModal","show","handleClose","recipientEmail","_s","subject","setSubject","message","setMessage","sending","setSending","success","setSuccess","handleSend","response","fetch","method","headers","body","JSON","stringify","to","data","json","ok","setTimeout","alert","error","console","onHide","centered","children","Header","closeButton","Title","fileName","_jsxFileName","lineNumber","columnNumber","Body","Group","controlId","Label","Control","type","value","disabled","className","placeholder","onChange","e","target","as","rows","Footer","variant","onClick","_c","$RefreshReg$"],"sources":["C:/Users/THINKPAD/Desktop/UEL/Enterprise_Architecture/CourseWorkApp/frontend/kings-frontend/src/components/EmailModal.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { Modal, Button, Form } from \"react-bootstrap\";\r\n\r\nconst EmailModal = ({ show, handleClose, recipientEmail }) => {\r\n  const [subject, setSubject] = useState(\"\");\r\n  const [message, setMessage] = useState(\"\");\r\n  const [sending, setSending] = useState(false);\r\n  const [success, setSuccess] = useState(false);\r\n\r\n  const handleSend = async () => {\r\n    setSending(true);\r\n    try {\r\n      const response = await fetch(\"/api/email/send\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          to: recipientEmail,\r\n          subject,\r\n          message,\r\n        }),\r\n      });\r\n\r\n      const data = await response.json();\r\n      if (response.ok) {\r\n        setSuccess(true);\r\n        setTimeout(() => {\r\n          handleClose();\r\n          setSubject(\"\");\r\n          setMessage(\"\");\r\n          setSuccess(false);\r\n        }, 1500);\r\n      } else {\r\n        alert(data.message || \"Failed to send email\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Email error:\", error);\r\n      alert(\"Error sending email\");\r\n    }\r\n    setSending(false);\r\n  };\r\n\r\n  return (\r\n    <Modal show={show} onHide={handleClose} centered>\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>Send Email</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <Form>\r\n          <Form.Group controlId=\"emailTo\">\r\n            <Form.Label>To</Form.Label>\r\n            <Form.Control type=\"email\" value={recipientEmail} disabled />\r\n          </Form.Group>\r\n          <Form.Group controlId=\"emailSubject\" className=\"mt-3\">\r\n            <Form.Label>Subject</Form.Label>\r\n            <Form.Control\r\n              type=\"text\"\r\n              placeholder=\"Enter subject\"\r\n              value={subject}\r\n              onChange={(e) => setSubject(e.target.value)}\r\n            />\r\n          </Form.Group>\r\n          <Form.Group controlId=\"emailMessage\" className=\"mt-3\">\r\n            <Form.Label>Message</Form.Label>\r\n            <Form.Control\r\n              as=\"textarea\"\r\n              rows={5}\r\n              placeholder=\"Type your message here...\"\r\n              value={message}\r\n              onChange={(e) => setMessage(e.target.value)}\r\n            />\r\n          </Form.Group>\r\n        </Form>\r\n        {success && (\r\n          <div className=\"text-success mt-3\">âœ… Email sent successfully!</div>\r\n        )}\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <Button variant=\"secondary\" onClick={handleClose} disabled={sending}>\r\n          Cancel\r\n        </Button>\r\n        <Button\r\n          variant=\"primary\"\r\n          onClick={handleSend}\r\n          disabled={!subject || !message || sending}\r\n        >\r\n          {sending ? \"Sending...\" : \"Send\"}\r\n        </Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default EmailModal;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}