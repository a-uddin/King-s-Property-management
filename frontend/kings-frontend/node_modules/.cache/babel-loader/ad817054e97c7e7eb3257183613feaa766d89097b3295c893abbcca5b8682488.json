{"ast":null,"code":"import React, { createContext, useContext, useMemo, useEffect, useRef, useLayoutEffect } from 'react';\nimport { i as invariant, u as useAsyncState, m as mergeWithStableProps, n as noProviderError, p as providerMustBeUniqueError, a as noSSRError, b as noHeadlessClientError } from './invariant-568a7633.js';\nconst initialUser = {\n  user: null,\n  fromCache: false\n};\nconst initialSession = {\n  session: null,\n  fromCache: false\n};\nconst StytchContext = createContext({\n  isMounted: false\n});\nconst StytchUserContext = createContext(initialUser);\nconst StytchSessionContext = createContext(initialSession);\nconst useIsMounted__INTERNAL = () => useContext(StytchContext).isMounted;\nconst isUIClient = client => {\n  return client.mountLogin !== undefined;\n};\n/**\n * Returns the active User.\n * The Stytch SDKs are used for client-side authentication and session management.\n * Check the fromCache property to determine if the user data is from persistent storage.\n * @example\n * const {user} = useStytchUser();\n * return (<h1>Welcome, {user.name.first_name}</h1>);\n */\nconst useStytchUser = () => {\n  invariant(useIsMounted__INTERNAL(), noProviderError('useStytchUser'));\n  return useContext(StytchUserContext);\n};\n/**\n * Returns the active user's Stytch session.\n * The Stytch SDKs are used for client-side authentication and session management.\n * Check the fromCache property to determine if the session data is from persistent storage.\n * @example\n * const {session} = useStytchSession();\n * useEffect(() => {\n *   if (!session) {\n *     router.replace('/login')\n *   }\n * }, [session]);\n */\nconst useStytchSession = () => {\n  invariant(useIsMounted__INTERNAL(), noProviderError('useStytchSession'));\n  return useContext(StytchSessionContext);\n};\n/**\n * Returns the Stytch client stored in the Stytch context.\n *\n * @example\n * const stytch = useStytch();\n * useEffect(() => {\n *   stytch.magicLinks.authenticate('...')\n * }, [stytch]);\n */\nconst useStytch = () => {\n  const ctx = useContext(StytchContext);\n  invariant(ctx.isMounted, noProviderError('useStytch'));\n  return ctx.client;\n};\nconst withStytch = Component => {\n  const WithStytch = props => {\n    invariant(useIsMounted__INTERNAL(), noProviderError('withStytch'));\n    return React.createElement(Component, Object.assign({}, props, {\n      stytch: useStytch()\n    }));\n  };\n  WithStytch.displayName = `withStytch(${Component.displayName || Component.name || 'Component'})`;\n  return WithStytch;\n};\nconst withStytchUser = Component => {\n  const WithStytchUser = props => {\n    invariant(useIsMounted__INTERNAL(), noProviderError('withStytchUser'));\n    const {\n      user,\n      fromCache\n    } = useStytchUser();\n    return React.createElement(Component, Object.assign({}, props, {\n      stytchUser: user,\n      stytchUserIsFromCache: fromCache\n    }));\n  };\n  WithStytchUser.displayName = `withStytchUser(${Component.displayName || Component.name || 'Component'})`;\n  return WithStytchUser;\n};\nconst withStytchSession = Component => {\n  const WithStytchSession = props => {\n    invariant(useIsMounted__INTERNAL(), noProviderError('withStytchSession'));\n    const {\n      session,\n      fromCache\n    } = useStytchSession();\n    return React.createElement(Component, Object.assign({}, props, {\n      stytchSession: session,\n      stytchSessionIsFromCache: fromCache\n    }));\n  };\n  WithStytchSession.displayName = `withStytchSession(${Component.displayName || Component.name || 'Component'})`;\n  return WithStytchSession;\n};\n/**\n * The Stytch Context Provider.\n * Wrap your application with this component in order to use Stytch everywhere in your app.\n * @example\n * const stytch = new StytchHeadlessClient('public-token-<find yours in the stytch dashboard>')\n *\n * ReactDOM.render(\n *   <StytchProvider stytch={stytch}>\n *     <App />\n *   </StytchProvider>,\n *   document.getElementById('root'),\n * )\n */\nconst StytchProvider = ({\n  stytch,\n  children\n}) => {\n  invariant(!useIsMounted__INTERNAL(), providerMustBeUniqueError);\n  invariant(typeof window !== 'undefined', noSSRError);\n  const ctx = useMemo(() => ({\n    client: stytch,\n    isMounted: true\n  }), [stytch]);\n  const [{\n    user,\n    session\n  }, setClientState] = useAsyncState({\n    session: stytch.session.getInfo(),\n    user: stytch.user.getInfo()\n  });\n  useEffect(() => stytch.onStateChange(() => {\n    setClientState(oldState => {\n      const newState = {\n        session: stytch.session.getInfo(),\n        user: stytch.user.getInfo()\n      };\n      return mergeWithStableProps(oldState, newState);\n    });\n  }), [setClientState, stytch]);\n  return React.createElement(StytchContext.Provider, {\n    value: ctx\n  }, React.createElement(StytchUserContext.Provider, {\n    value: user\n  }, React.createElement(StytchSessionContext.Provider, {\n    value: session\n  }, children)));\n};\n\n/**\n * The Stytch Login Screen component.\n * This component can only be used with a Stytch UI Client\n * passed into the StytchProvider.\n *\n * See the {@link https://stytch.com/docs/sdks online reference}\n *\n * @example\n * <StytchLogin\n *   config={{\n *     products: ['emailMagicLinks', 'oauth'],\n *     emailMagicLinksOptions: {\n *       loginRedirectURL: 'https://example.com/authenticate',\n *       signupRedirectURL: 'https://example.com/authenticate',\n *     },\n *     oauthOptions: {\n *      providers: [{ type: OAuthProviders.Google }, { type: OAuthProviders.Microsoft }],\n *    },\n *   }}\n *   styles={{\n *     fontFamily: '\"Helvetica New\", Helvetica, sans-serif',\n *     primaryColor: '#0577CA',\n *     width: '321px',\n *   }}\n *   callbacks={{\n *     onEvent: (event) => console.log(event)\n *   }}\n * />\n */\nconst StytchLogin = ({\n  config,\n  styles,\n  callbacks\n}) => {\n  invariant(useIsMounted__INTERNAL(), noProviderError('<StytchLogin />'));\n  const stytchClient = useStytch();\n  const containerEl = useRef(null);\n  useLayoutEffect(() => {\n    if (!isUIClient(stytchClient)) {\n      throw Error(noHeadlessClientError);\n    }\n    if (!containerEl.current) {\n      return;\n    }\n    if (!containerEl.current.id) {\n      const randId = Math.floor(Math.random() * 1e6);\n      containerEl.current.id = `stytch-magic-link-${randId}`;\n    }\n    stytchClient.mountLogin({\n      config,\n      callbacks,\n      elementId: `#${containerEl.current.id}`,\n      styles\n    });\n  }, [stytchClient, config, styles, callbacks]);\n  return React.createElement(\"div\", {\n    ref: containerEl\n  });\n};\n/**\n * The Stytch Reset Password component.\n * This component can only be used with a Stytch UI Client\n * passed into the StytchProvider.\n *\n * See the {@link https://stytch.com/docs/sdks online reference}\n *\n * @example\n * <StytchPasswordReset\n *   config={{\n *     products: ['emailMagicLinks', 'oauth'],\n *     emailMagicLinksOptions: {\n *       loginRedirectURL: 'https://example.com/authenticate',\n *       signupRedirectURL: 'https://example.com/authenticate',\n *     },\n *     oauthOptions: {\n *      providers: [{ type: OAuthProviders.Google }, { type: OAuthProviders.Microsoft }],\n *    },\n *   }}\n *   passwordResetToken=\"PvC5UudZ7TPZbELt95yXAQ-8MeEUCRob8bUQ-g52fIJs\"\n *   styles={{\n *     fontFamily: '\"Helvetica New\", Helvetica, sans-serif',\n *     primaryColor: '#0577CA',\n *     width: '321px',\n *   }}\n *   callbacks={{\n *     onEvent: (event) => console.log(event)\n *   }}\n * />\n */\nconst StytchPasswordReset = ({\n  config,\n  styles,\n  callbacks,\n  passwordResetToken\n}) => {\n  invariant(useIsMounted__INTERNAL(), noProviderError('<StytchResetPassword />'));\n  const stytchClient = useStytch();\n  const containerEl = useRef(null);\n  useLayoutEffect(() => {\n    if (!isUIClient(stytchClient)) {\n      throw Error(noHeadlessClientError);\n    }\n    if (!containerEl.current) {\n      return;\n    }\n    if (!containerEl.current.id) {\n      const randId = Math.floor(Math.random() * 1e6);\n      containerEl.current.id = `stytch-reset-password-${randId}`;\n    }\n    if (passwordResetToken) {\n      stytchClient.mountResetPassword({\n        config,\n        callbacks,\n        elementId: `#${containerEl.current.id}`,\n        styles,\n        passwordResetToken\n      });\n    }\n  }, [stytchClient, config, styles, callbacks, passwordResetToken]);\n  return React.createElement(\"div\", {\n    ref: containerEl\n  });\n};\n/**\n * The Stytch Passkey Registration component.\n * This component can only be used with a Stytch UI Client\n * passed into the StytchProvider.\n *\n * See the {@link https://stytch.com/docs/sdks online reference}\n *\n * @example\n * const styles = {\n *     container: {\n *       backgroundColor: '#e11e1e',\n *     },\n *     colors: {\n *       primary: '#ff00f7',\n *       secondary: '#5C727D',\n *     },\n *    }\n *\n * <StytchPasskeyRegistration\n *   styles={styles}\n *   callbacks={{\n *     onEvent: (event) => console.log(event)\n *   }}\n * />\n */\nconst StytchPasskeyRegistration = ({\n  config,\n  styles,\n  callbacks\n}) => {\n  invariant(useIsMounted__INTERNAL(), noProviderError('<StytchPasskeyRegistration />'));\n  const stytchClient = useStytch();\n  const user = useStytchUser();\n  const containerEl = useRef(null);\n  useLayoutEffect(() => {\n    if (!isUIClient(stytchClient)) {\n      throw Error(noHeadlessClientError);\n    }\n    if (!containerEl.current) {\n      return;\n    }\n    if (!containerEl.current.id) {\n      const randId = Math.floor(Math.random() * 1e6);\n      containerEl.current.id = `stytch-passkey-registration-${randId}`;\n    }\n    stytchClient.mountPasskeyRegistration({\n      config,\n      callbacks,\n      elementId: `#${containerEl.current.id}`,\n      styles\n    });\n  }, [stytchClient, config, styles, callbacks, user]);\n  return React.createElement(\"div\", {\n    ref: containerEl\n  });\n};\n/**\n * The Stytch IDP component.\n * Parses OAuth Authorization params (client_id, scope, nonce, etc.) out of the page URL.\n * Requires the user to be logged in.\n * This component can only be used with a Stytch UI Client\n * passed into the StytchProvider.\n *\n * See the {@link https://stytch.com/docs/sdks online reference}\n *\n * @example\n * const styles = {\n *   container: {\n *     backgroundColor: '#e11e1e',\n *   },\n *   colors: {\n *     primary: '#ff00f7',\n *     secondary: '#5C727D',\n *   },\n * }\n *\n * <IdentityProvider\n *   styles={styles}\n *   callbacks={{\n *     onEvent: (event) => console.log(event)\n *   }}\n * />\n */\nconst IdentityProvider = ({\n  styles,\n  callbacks\n}) => {\n  invariant(useIsMounted__INTERNAL(), noProviderError('<IdentityProvider />'));\n  const stytchClient = useStytch();\n  const user = useStytchUser();\n  const containerEl = useRef(null);\n  useLayoutEffect(() => {\n    if (!isUIClient(stytchClient)) {\n      throw Error(noHeadlessClientError);\n    }\n    if (!containerEl.current) {\n      return;\n    }\n    if (!containerEl.current.id) {\n      const randId = Math.floor(Math.random() * 1e6);\n      containerEl.current.id = `stytch-idp-${randId}`;\n    }\n    stytchClient.mountIdentityProvider({\n      callbacks,\n      elementId: `#${containerEl.current.id}`,\n      styles\n    });\n  }, [stytchClient, styles, callbacks, user]);\n  return React.createElement(\"div\", {\n    ref: containerEl\n  });\n};\nexport { IdentityProvider, StytchLogin, StytchPasskeyRegistration, StytchPasswordReset, StytchProvider, useStytch, useStytchSession, useStytchUser, withStytch, withStytchSession, withStytchUser };","map":{"version":3,"names":["React","createContext","useContext","useMemo","useEffect","useRef","useLayoutEffect","i","invariant","u","useAsyncState","m","mergeWithStableProps","n","noProviderError","p","providerMustBeUniqueError","a","noSSRError","b","noHeadlessClientError","initialUser","user","fromCache","initialSession","session","StytchContext","isMounted","StytchUserContext","StytchSessionContext","useIsMounted__INTERNAL","isUIClient","client","mountLogin","undefined","useStytchUser","useStytchSession","useStytch","ctx","withStytch","Component","WithStytch","props","createElement","Object","assign","stytch","displayName","name","withStytchUser","WithStytchUser","stytchUser","stytchUserIsFromCache","withStytchSession","WithStytchSession","stytchSession","stytchSessionIsFromCache","StytchProvider","children","window","setClientState","getInfo","onStateChange","oldState","newState","Provider","value","StytchLogin","config","styles","callbacks","stytchClient","containerEl","Error","current","id","randId","Math","floor","random","elementId","ref","StytchPasswordReset","passwordResetToken","mountResetPassword","StytchPasskeyRegistration","mountPasskeyRegistration","IdentityProvider","mountIdentityProvider"],"sources":["C:/Users/THINKPAD/Desktop/UEL/Enterprise_Architecture/CourseWorkApp/frontend/kings-frontend/node_modules/@stytch/react/dist/index.esm.js"],"sourcesContent":["import React, { createContext, useContext, useMemo, useEffect, useRef, useLayoutEffect } from 'react';\nimport { i as invariant, u as useAsyncState, m as mergeWithStableProps, n as noProviderError, p as providerMustBeUniqueError, a as noSSRError, b as noHeadlessClientError } from './invariant-568a7633.js';\n\nconst initialUser = {\n    user: null,\n    fromCache: false,\n};\nconst initialSession = {\n    session: null,\n    fromCache: false,\n};\nconst StytchContext = createContext({ isMounted: false });\nconst StytchUserContext = createContext(initialUser);\nconst StytchSessionContext = createContext(initialSession);\nconst useIsMounted__INTERNAL = () => useContext(StytchContext).isMounted;\nconst isUIClient = (client) => {\n    return client.mountLogin !== undefined;\n};\n/**\n * Returns the active User.\n * The Stytch SDKs are used for client-side authentication and session management.\n * Check the fromCache property to determine if the user data is from persistent storage.\n * @example\n * const {user} = useStytchUser();\n * return (<h1>Welcome, {user.name.first_name}</h1>);\n */\nconst useStytchUser = () => {\n    invariant(useIsMounted__INTERNAL(), noProviderError('useStytchUser'));\n    return useContext(StytchUserContext);\n};\n/**\n * Returns the active user's Stytch session.\n * The Stytch SDKs are used for client-side authentication and session management.\n * Check the fromCache property to determine if the session data is from persistent storage.\n * @example\n * const {session} = useStytchSession();\n * useEffect(() => {\n *   if (!session) {\n *     router.replace('/login')\n *   }\n * }, [session]);\n */\nconst useStytchSession = () => {\n    invariant(useIsMounted__INTERNAL(), noProviderError('useStytchSession'));\n    return useContext(StytchSessionContext);\n};\n/**\n * Returns the Stytch client stored in the Stytch context.\n *\n * @example\n * const stytch = useStytch();\n * useEffect(() => {\n *   stytch.magicLinks.authenticate('...')\n * }, [stytch]);\n */\nconst useStytch = () => {\n    const ctx = useContext(StytchContext);\n    invariant(ctx.isMounted, noProviderError('useStytch'));\n    return ctx.client;\n};\nconst withStytch = (Component) => {\n    const WithStytch = (props) => {\n        invariant(useIsMounted__INTERNAL(), noProviderError('withStytch'));\n        return React.createElement(Component, Object.assign({}, props, { stytch: useStytch() }));\n    };\n    WithStytch.displayName = `withStytch(${Component.displayName || Component.name || 'Component'})`;\n    return WithStytch;\n};\nconst withStytchUser = (Component) => {\n    const WithStytchUser = (props) => {\n        invariant(useIsMounted__INTERNAL(), noProviderError('withStytchUser'));\n        const { user, fromCache } = useStytchUser();\n        return React.createElement(Component, Object.assign({}, props, { stytchUser: user, stytchUserIsFromCache: fromCache }));\n    };\n    WithStytchUser.displayName = `withStytchUser(${Component.displayName || Component.name || 'Component'})`;\n    return WithStytchUser;\n};\nconst withStytchSession = (Component) => {\n    const WithStytchSession = (props) => {\n        invariant(useIsMounted__INTERNAL(), noProviderError('withStytchSession'));\n        const { session, fromCache } = useStytchSession();\n        return React.createElement(Component, Object.assign({}, props, { stytchSession: session, stytchSessionIsFromCache: fromCache }));\n    };\n    WithStytchSession.displayName = `withStytchSession(${Component.displayName || Component.name || 'Component'})`;\n    return WithStytchSession;\n};\n/**\n * The Stytch Context Provider.\n * Wrap your application with this component in order to use Stytch everywhere in your app.\n * @example\n * const stytch = new StytchHeadlessClient('public-token-<find yours in the stytch dashboard>')\n *\n * ReactDOM.render(\n *   <StytchProvider stytch={stytch}>\n *     <App />\n *   </StytchProvider>,\n *   document.getElementById('root'),\n * )\n */\nconst StytchProvider = ({ stytch, children, }) => {\n    invariant(!useIsMounted__INTERNAL(), providerMustBeUniqueError);\n    invariant(typeof window !== 'undefined', noSSRError);\n    const ctx = useMemo(() => ({ client: stytch, isMounted: true }), [stytch]);\n    const [{ user, session }, setClientState] = useAsyncState({\n        session: stytch.session.getInfo(),\n        user: stytch.user.getInfo(),\n    });\n    useEffect(() => stytch.onStateChange(() => {\n        setClientState((oldState) => {\n            const newState = {\n                session: stytch.session.getInfo(),\n                user: stytch.user.getInfo(),\n            };\n            return mergeWithStableProps(oldState, newState);\n        });\n    }), [setClientState, stytch]);\n    return (React.createElement(StytchContext.Provider, { value: ctx },\n        React.createElement(StytchUserContext.Provider, { value: user },\n            React.createElement(StytchSessionContext.Provider, { value: session }, children))));\n};\n\n/**\n * The Stytch Login Screen component.\n * This component can only be used with a Stytch UI Client\n * passed into the StytchProvider.\n *\n * See the {@link https://stytch.com/docs/sdks online reference}\n *\n * @example\n * <StytchLogin\n *   config={{\n *     products: ['emailMagicLinks', 'oauth'],\n *     emailMagicLinksOptions: {\n *       loginRedirectURL: 'https://example.com/authenticate',\n *       signupRedirectURL: 'https://example.com/authenticate',\n *     },\n *     oauthOptions: {\n *      providers: [{ type: OAuthProviders.Google }, { type: OAuthProviders.Microsoft }],\n *    },\n *   }}\n *   styles={{\n *     fontFamily: '\"Helvetica New\", Helvetica, sans-serif',\n *     primaryColor: '#0577CA',\n *     width: '321px',\n *   }}\n *   callbacks={{\n *     onEvent: (event) => console.log(event)\n *   }}\n * />\n */\nconst StytchLogin = ({ config, styles, callbacks, }) => {\n    invariant(useIsMounted__INTERNAL(), noProviderError('<StytchLogin />'));\n    const stytchClient = useStytch();\n    const containerEl = useRef(null);\n    useLayoutEffect(() => {\n        if (!isUIClient(stytchClient)) {\n            throw Error(noHeadlessClientError);\n        }\n        if (!containerEl.current) {\n            return;\n        }\n        if (!containerEl.current.id) {\n            const randId = Math.floor(Math.random() * 1e6);\n            containerEl.current.id = `stytch-magic-link-${randId}`;\n        }\n        stytchClient.mountLogin({\n            config,\n            callbacks,\n            elementId: `#${containerEl.current.id}`,\n            styles,\n        });\n    }, [stytchClient, config, styles, callbacks]);\n    return React.createElement(\"div\", { ref: containerEl });\n};\n/**\n * The Stytch Reset Password component.\n * This component can only be used with a Stytch UI Client\n * passed into the StytchProvider.\n *\n * See the {@link https://stytch.com/docs/sdks online reference}\n *\n * @example\n * <StytchPasswordReset\n *   config={{\n *     products: ['emailMagicLinks', 'oauth'],\n *     emailMagicLinksOptions: {\n *       loginRedirectURL: 'https://example.com/authenticate',\n *       signupRedirectURL: 'https://example.com/authenticate',\n *     },\n *     oauthOptions: {\n *      providers: [{ type: OAuthProviders.Google }, { type: OAuthProviders.Microsoft }],\n *    },\n *   }}\n *   passwordResetToken=\"PvC5UudZ7TPZbELt95yXAQ-8MeEUCRob8bUQ-g52fIJs\"\n *   styles={{\n *     fontFamily: '\"Helvetica New\", Helvetica, sans-serif',\n *     primaryColor: '#0577CA',\n *     width: '321px',\n *   }}\n *   callbacks={{\n *     onEvent: (event) => console.log(event)\n *   }}\n * />\n */\nconst StytchPasswordReset = ({ config, styles, callbacks, passwordResetToken, }) => {\n    invariant(useIsMounted__INTERNAL(), noProviderError('<StytchResetPassword />'));\n    const stytchClient = useStytch();\n    const containerEl = useRef(null);\n    useLayoutEffect(() => {\n        if (!isUIClient(stytchClient)) {\n            throw Error(noHeadlessClientError);\n        }\n        if (!containerEl.current) {\n            return;\n        }\n        if (!containerEl.current.id) {\n            const randId = Math.floor(Math.random() * 1e6);\n            containerEl.current.id = `stytch-reset-password-${randId}`;\n        }\n        if (passwordResetToken) {\n            stytchClient.mountResetPassword({\n                config,\n                callbacks,\n                elementId: `#${containerEl.current.id}`,\n                styles,\n                passwordResetToken,\n            });\n        }\n    }, [stytchClient, config, styles, callbacks, passwordResetToken]);\n    return React.createElement(\"div\", { ref: containerEl });\n};\n/**\n * The Stytch Passkey Registration component.\n * This component can only be used with a Stytch UI Client\n * passed into the StytchProvider.\n *\n * See the {@link https://stytch.com/docs/sdks online reference}\n *\n * @example\n * const styles = {\n *     container: {\n *       backgroundColor: '#e11e1e',\n *     },\n *     colors: {\n *       primary: '#ff00f7',\n *       secondary: '#5C727D',\n *     },\n *    }\n *\n * <StytchPasskeyRegistration\n *   styles={styles}\n *   callbacks={{\n *     onEvent: (event) => console.log(event)\n *   }}\n * />\n */\nconst StytchPasskeyRegistration = ({ config, styles, callbacks, }) => {\n    invariant(useIsMounted__INTERNAL(), noProviderError('<StytchPasskeyRegistration />'));\n    const stytchClient = useStytch();\n    const user = useStytchUser();\n    const containerEl = useRef(null);\n    useLayoutEffect(() => {\n        if (!isUIClient(stytchClient)) {\n            throw Error(noHeadlessClientError);\n        }\n        if (!containerEl.current) {\n            return;\n        }\n        if (!containerEl.current.id) {\n            const randId = Math.floor(Math.random() * 1e6);\n            containerEl.current.id = `stytch-passkey-registration-${randId}`;\n        }\n        stytchClient.mountPasskeyRegistration({\n            config,\n            callbacks,\n            elementId: `#${containerEl.current.id}`,\n            styles,\n        });\n    }, [stytchClient, config, styles, callbacks, user]);\n    return React.createElement(\"div\", { ref: containerEl });\n};\n/**\n * The Stytch IDP component.\n * Parses OAuth Authorization params (client_id, scope, nonce, etc.) out of the page URL.\n * Requires the user to be logged in.\n * This component can only be used with a Stytch UI Client\n * passed into the StytchProvider.\n *\n * See the {@link https://stytch.com/docs/sdks online reference}\n *\n * @example\n * const styles = {\n *   container: {\n *     backgroundColor: '#e11e1e',\n *   },\n *   colors: {\n *     primary: '#ff00f7',\n *     secondary: '#5C727D',\n *   },\n * }\n *\n * <IdentityProvider\n *   styles={styles}\n *   callbacks={{\n *     onEvent: (event) => console.log(event)\n *   }}\n * />\n */\nconst IdentityProvider = ({ styles, callbacks }) => {\n    invariant(useIsMounted__INTERNAL(), noProviderError('<IdentityProvider />'));\n    const stytchClient = useStytch();\n    const user = useStytchUser();\n    const containerEl = useRef(null);\n    useLayoutEffect(() => {\n        if (!isUIClient(stytchClient)) {\n            throw Error(noHeadlessClientError);\n        }\n        if (!containerEl.current) {\n            return;\n        }\n        if (!containerEl.current.id) {\n            const randId = Math.floor(Math.random() * 1e6);\n            containerEl.current.id = `stytch-idp-${randId}`;\n        }\n        stytchClient.mountIdentityProvider({\n            callbacks,\n            elementId: `#${containerEl.current.id}`,\n            styles,\n        });\n    }, [stytchClient, styles, callbacks, user]);\n    return React.createElement(\"div\", { ref: containerEl });\n};\n\nexport { IdentityProvider, StytchLogin, StytchPasskeyRegistration, StytchPasswordReset, StytchProvider, useStytch, useStytchSession, useStytchUser, withStytch, withStytchSession, withStytchUser };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}